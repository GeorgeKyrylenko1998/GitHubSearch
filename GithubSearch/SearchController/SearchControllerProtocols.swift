//
//  SearchControllerProtocols.swift
//  GithubSearch
//
//  Created George Kyrylenko on 30.08.2020.
//  Copyright © 2020 TestApp. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import Foundation

//MARK: Wireframe -
protocol SearchControllerWireframeProtocol: class {
    
}
//MARK: Presenter -
protocol SearchControllerPresenterProtocol: class {
    func searchRepo(by name: String)
    
    func add(firstResult: RepositoriesModel, secondResult: RepositoriesModel)
    func isLoginedUser() -> Bool
    func login(with email: String, and password: String)
    func loginSuccess()
    func logOut()
    func getStoredResults()
    func setStoredResults(results: [RepoRealmModel])
    func onError(error: Error)
    func remove(repo: RepoUIModel)
    func markAsViewed(repo: RepoUIModel)
}

//MARK: Interactor -
protocol SearchControllerInteractorProtocol: class {
    
    var presenter: SearchControllerPresenterProtocol?  { get set }
    func searchRepo(by name: String, page: Int)
    func login(with email: String, and password: String)
    func getStoredResults()
    func removeRepo(by  url: String?)
    func markAsRepoViewed(by URL: String?)
}

//MARK: View -
protocol SearchControllerViewProtocol: class {
    
    var presenter: SearchControllerPresenterProtocol?  { get set }
    
    func add(searchResults: [RepoUIModel], isNewSearch: Bool)
    func loginSuccess()
    func onError(error: String)
}
